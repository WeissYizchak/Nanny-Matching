<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PLWPF"
      xmlns:BE="clr-namespace:BE;assembly=BE" x:Class="PLWPF.NannyPage"
      mc:Ignorable="d" 
      
      Validation.Error="Page_Error"
      Title="NannyPage">


    <Page.Resources>
        <!--style of the all text box-->
        <Style x:Key="textStyleTextBox" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MyStyleTextBox" TargetType="TextBox" BasedOn="{StaticResource textStyleTextBox }">
            <Setter Property="TextBox.IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DeleteNanny, Path=IsChecked}" Value="true">
                    <Setter Property="TextBox.IsEnabled" Value="false"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=UpdateNanny, Path=IsChecked}" Value="true" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Name}" Value="idTextBox"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="TextBox.IsEnabled" Value="False" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <!---->
        
        <Style x:Key="UP" TargetType="Button">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=nameDey, Path=Content}" Value="Sunday">
                    <Setter Property="Button.IsEnabled" Value="false"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DOWN" TargetType="Button">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=nameDey, Path=Content}" Value="Friday">
                    <Setter Property="Button.IsEnabled" Value="false"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="MyButton" TargetType="Button">
            <Setter Property="TextBlock.Foreground" Value="Black" />
            <Setter Property="Background" Value="LightBlue"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>

        <local:NotBooleanToVisibilityConverter     
            x:Key="notBooleanToVisibilityConverter" />
        
    </Page.Resources>

    
    <Grid Background="LightGray" Margin="0,0,-119.8,-50">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="113*"/>
            <ColumnDefinition Width="51*"/>
        </Grid.ColumnDefinitions>
        
        <Grid Margin="30.2,165,62,259.6" Grid.Column="1">
            <RadioButton x:Name="AddNanny" Content="Add Nanny" HorizontalAlignment="Left" VerticalAlignment="Top"  IsChecked="True"/>
            <RadioButton x:Name="UpdateNanny" Content="Update Nanny" HorizontalAlignment="Left"  VerticalAlignment="Center"/>
            <RadioButton x:Name="DeleteNanny" Content="Delete Nanny" HorizontalAlignment="Left"  VerticalAlignment="Bottom"/>
        </Grid>
        
        <DataGrid x:Name="dataGrid" ItemsSource= "{Binding}"  IsReadOnly="True" HorizontalAlignment="Left" Height="85" Margin="15.2,35,0,0" VerticalAlignment="Top" Width="210" SelectionChanged="DataGrid_SelectionChanged" Grid.Column="1" AutoGenerateColumns="False" IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False" >
            <DataGrid.Visibility>
                <Binding ElementName="AddNanny" Path="IsChecked" Converter="{StaticResource notBooleanToVisibilityConverter}" ConverterParameter="dataGrid" />
            </DataGrid.Visibility>
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Width="60" Binding="{Binding Path = Id }"></DataGridTextColumn>
                <DataGridTextColumn Header="First name" Width="70" Binding="{Binding Path= FirstName}"></DataGridTextColumn>
                <DataGridTextColumn Header="Last name" Width="100*" Binding="{Binding Path=LastName}"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Grid Margin="0,0,5.8,0.6">
            <Grid x:Name="gridNanData" HorizontalAlignment="Left" Margin="21,10,0,-154" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Content="Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                <TextBox x:Name="idTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Address:"   Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                <TextBox x:Name="addressTextBox" TextChanged="addressTextBox_TextChanged" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="5" Grid.Row="5" Style="{StaticResource MyStyleTextBox}"
                         LostFocus="addressTextBox_LostFocus" Text="{Binding Address, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="cell Phone:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                <TextBox x:Name="cellPhoneTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="4" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding cellPhone, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Birth Date:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                <DatePicker x:Name="birthDateDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="3" IsEnabled="{Binding ElementName=cellPhoneTextBox, Path=IsEnabled}"
                            SelectedDate="{Binding BirthDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>
                <Label Content="Elevetor:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="8" VerticalAlignment="Center"/>
                <CheckBox x:Name="elevetorCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=floorTextBox, Path=IsEnabled}"
                          IsChecked="{Binding Elevetor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="8" VerticalAlignment="Center"/>
                <Label Content="Floor:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
                <TextBox x:Name="floorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="6" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding Floor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Experience:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="12" VerticalAlignment="Center"/>
                <TextBox x:Name="experienceTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="12" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding Experience, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>

                <Label Content="Is Hourly Rate:" Grid.Column="2" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                <CheckBox x:Name="isHourlyRateCheckBox" Content="" Grid.Column="3" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=sallaryPerHourTextBox, Path=IsEnabled}" 
                          IsChecked="{Binding IsHourlyRate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                <Label Content="Sallary Per Hour:" Grid.Column="2" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                <TextBox x:Name="sallaryPerHourTextBox" Grid.Column="3" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding SallaryPerHour, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Sallary Per Months:" Grid.Column="2" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                <TextBox x:Name="sallaryPerMonthsTextBox" Grid.Column="3" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding SallaryPerMonths, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Capacity Children:" Grid.Column="2" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                <TextBox x:Name="capacityChildrenTextBox" Grid.Column="3" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding CapacityChildren, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Max Age monthe:" Grid.Column="2" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                <TextBox x:Name="maxAge_montheTextBox" Grid.Column="3" HorizontalAlignment="Left" Height="23" Margin="4" Grid.Row="4" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding MaxAge_monthe, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Min Age monthe:" Grid.Column="2" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                <TextBox x:Name="minAge_montheTextBox" Grid.Column="3" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="5" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding MinAge_monthe, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Ministry Education Vaction:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="13" VerticalAlignment="Center"/>
                <CheckBox x:Name="ministryEducationVactionCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=recommendationsTextBox, Path=IsEnabled}"
                          IsChecked="{Binding MinistryEducationVaction, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="13" VerticalAlignment="Center"/>
                <Label Content="Recommendations:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="14" VerticalAlignment="Center"/>
                <TextBox x:Name="recommendationsTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="14" Style="{StaticResource MyStyleTextBox}"
                         Text="{Binding Recommendations, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
            </Grid>

            <Button x:Name="SaveButton" Content="Save" Style="{StaticResource MyButton}" Click="SaveButton_Click" HorizontalAlignment="Left" Margin="95,380,0,0" VerticalAlignment="Top" Width="154" Height="36" >
                <Button.Visibility>
                    <Binding ElementName="AddNanny" Path="IsChecked" Converter="{StaticResource notBooleanToVisibilityConverter}"/>
                </Button.Visibility>
            </Button>
            <Button x:Name="UpdateButton" Content="Update" Style="{StaticResource MyButton}" HorizontalAlignment="Left" Margin="95,380,0,0" Click="UpdateButton_Click"
                    VerticalAlignment="Top" Width="154" Height="36" Visibility="{Binding ElementName=UpdateNanny, Path=IsChecked, Converter={StaticResource notBooleanToVisibilityConverter}}"/>
            <Button x:Name="DeleteButton" Content="Delete" Style="{StaticResource MyButton}" HorizontalAlignment="Left" Click="DeleteButton_Click" VerticalAlignment="Top" Width="154" Height="36" Margin="95,380,0,0" 
                    Visibility="{Binding ElementName=DeleteNanny, Path=IsChecked, Converter={StaticResource notBooleanToVisibilityConverter}}"/>

            <Grid HorizontalAlignment="Left" Height="145" Margin="345,220,0,0" VerticalAlignment="Top" Width="195">

            <Grid x:Name="timeGrid" HorizontalAlignment="Left" Margin="14,34,0,0" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Content="Start:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                <TextBox x:Name="StartTimeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="1" Text="{Binding Path=StartTime, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="63" IsEnabled="{Binding ElementName=isWorkDayCheckBox, Path=IsChecked}" GotFocus="StartTimeTextBox_GotFocus"/>

                <Label Content="End:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                <TextBox x:Name="EndTimeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="2" Text="{Binding Path=EndTime, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="63" IsEnabled="{Binding ElementName=isWorkDayCheckBox, Path=IsChecked}" GotFocus="EndTimeTextBox_GotFocus"/>

                <Label Content="You Work?:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,4,0,3.6" Grid.Row="0" VerticalAlignment="Center" Grid.ColumnSpan="2" Width="83"/>
                <CheckBox x:Name="isWorkDayCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding IsWork, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="35.8,8,0,9.6" Grid.Row="0" VerticalAlignment="Center" RenderTransformOrigin="2.84,0.1" />

                <Button Content="DOWN" HorizontalAlignment="Left" VerticalAlignment="Top" Width="42" Height="30"  RenderTransformOrigin="0.5,0.73" Grid.Column="2" Margin="10.2,30.4,-52.2,0" Grid.Row="1" Grid.RowSpan="2" Click="Button_DOWNClick" Style="{StaticResource DOWN}"/>
                <Button Content="UP" HorizontalAlignment="Left" VerticalAlignment="Top" Width="42" Height="30" RenderTransformOrigin="5.187,1.413" Grid.Column="2" Margin="10.2,4,-52.2,0" Grid.RowSpan="2" Click="Button_UPClick" Style="{StaticResource UP}"/>

            </Grid>
            <Label Content="Please enter your working hours" HorizontalAlignment="Left" Margin="10,7,0,0" VerticalAlignment="Top" Width="175"/>
            <Label x:Name="nameDey" Content="Sunday" HorizontalAlignment="Left" Margin="130,70,0,0" VerticalAlignment="Top" Width="55"/>
        </Grid>
            <Border Name="addresBorder" BorderBrush="Black"  Visibility="Collapsed" BorderThickness="1" Margin="185,197,6,103.4">
            <ScrollViewer Background="White" VerticalScrollBarVisibility="Auto"  RenderTransformOrigin="0.5,0.5" >
                <StackPanel Name="resultStack"></StackPanel>
            </ScrollViewer>
        </Border>
        </Grid>
    </Grid>
</Page>
<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PLWPF"
      xmlns:BE="clr-namespace:BE;assembly=BE" x:Class="PLWPF.ChildPage"
      mc:Ignorable="d" 
      d:DesignHeight="400.4" d:DesignWidth="595"
      Validation.Error="validation_Error"  
      Title="ChildPage">

    <Page.Resources>



        <Style x:Key="textBoxInError" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
              Value="{Binding RelativeSource={x:Static RelativeSource.Self},
              Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataPickerInError" TargetType="DatePicker">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
              Value="{Binding RelativeSource={x:Static RelativeSource.Self},
              Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MyButton" TargetType="Button">
            <Setter Property="TextBlock.Foreground" Value="Black" />
            <Setter Property="Background" Value="LightBlue"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>

        <Style x:Key="MyStyleTextBox" TargetType="TextBox" BasedOn="{StaticResource textBoxInError}">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DeleteChild, Path=IsChecked}" Value="true">
                    <Setter Property="IsEnabled" Value="false"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=UpdateChild, Path=IsChecked}" Value="true" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Name}" Value="idTextBox"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="IsEnabled" Value="False" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CheckBoxMystyle" TargetType="CheckBox">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DeleteChild, Path=IsChecked}" Value="true">
                    <Setter Property="IsEnabled" Value="false"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=AddChild, Path=IsChecked}" Value="true">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DatePickerMystyle" TargetType="DatePicker" BasedOn="{StaticResource DataPickerInError}">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DeleteChild, Path=IsChecked}" Value="true">
                    <Setter Property="IsEnabled" Value="false"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>



        <local:NotBooleanToVisibilityConverter     
            x:Key="notBooleanToVisibilityConverter" />
        <CollectionViewSource x:Key="childViewSource" d:DesignSource="{d:DesignInstance {x:Type BE:Child}, CreateList=True}"/>
    </Page.Resources>

    <Grid Background="LightGray" Margin="0,0,0.2,-50">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="62*"/>
            <ColumnDefinition Width="57*"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="gridChildData" VerticalAlignment="Top" Margin="81,40,0,0" HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Birth Date:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
            <DatePicker x:Name="birthDateDatePicker"  Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="4" SelectedDate="{Binding BirthDate, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=true }" VerticalAlignment="Center" Style="{StaticResource DatePickerMystyle}"   />
            <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
            <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName , Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"  Style="{StaticResource MyStyleTextBox}"/>
            <Label Content="Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
            <TextBox x:Name="idTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"  Style="{StaticResource MyStyleTextBox}" />
            <Label Content="Is Specal Need:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
            <CheckBox x:Name="isSpecalNeedCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding IsSpecalNeed, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="5" VerticalAlignment="Center" Style="{StaticResource CheckBoxMystyle}" />
            <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
            <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"  Style="{StaticResource MyStyleTextBox}" />
            <Label Content="Mother Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
            <TextBox x:Name="motherIdTextBox" KeyUp="TextBox_KeyUp" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Text="{Binding MotherId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"  Style="{StaticResource MyStyleTextBox}" />
            <Label Content="Spicial Need:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
            <TextBox x:Name="spicialNeedTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="109" Margin="3,4,0,-81" Grid.Row="6" IsEnabled="{Binding ElementName=isSpecalNeedCheckBox , Path=IsChecked}" Text="{Binding SpicialNeed, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"  Style="{StaticResource MyStyleTextBox}" />
        </Grid>

        <DataGrid x:Name="dataGrid" ItemsSource= "{Binding}"  IsReadOnly="True" HorizontalAlignment="Left" Height="85" Margin="34.6,50,0,0" VerticalAlignment="Top" Width="210" SelectionChanged="DataGrid_SelectionChanged" Grid.Column="1" AutoGenerateColumns="False" IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False" Style="{StaticResource DataGridStyle}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Width="60" Binding="{Binding Path = Id }"></DataGridTextColumn>
                <DataGridTextColumn Header="First name" Width="70" Binding="{Binding Path= FirstName}"></DataGridTextColumn>
                <DataGridTextColumn Header="Last name" Width="100*" Binding="{Binding Path=LastName}"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Button x:Name="SaveButton" Content="Save" Style="{StaticResource MyButton}"  HorizontalAlignment="Left" Margin="95,380,0,0" VerticalAlignment="Top" Width="154" Height="36" Visibility="{Binding ElementName=AddChild, Path=IsChecked, Converter={StaticResource notBooleanToVisibilityConverter}}" Click="SaveButton_Click" />
        <Button x:Name="UpdateButton" Content="Update" Style="{StaticResource MyButton}" HorizontalAlignment="Left" Margin="95,380,0,0" VerticalAlignment="Top" Width="154" Height="36"  Visibility="{Binding ElementName=UpdateChild, Path=IsChecked, Converter={StaticResource notBooleanToVisibilityConverter}}" Click="UpdateButton_Click"/>
        <Button x:Name="DeleteButton" Content="Delete" Style="{StaticResource MyButton}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="154" Height="36" Margin="95,380,0,0"  Visibility="{Binding ElementName=DeleteChild, Path=IsChecked, Converter={StaticResource notBooleanToVisibilityConverter}}" Click="DeleteButton_Click"/>
        <RadioButton x:Name="AddChild" Content="Add Child" HorizontalAlignment="Left" Margin="84,144,0,0" VerticalAlignment="Top"  Grid.Column="1" IsChecked="True" />
        <RadioButton x:Name="UpdateChild" Content="Update Child" HorizontalAlignment="Left" Margin="83,173,0,0" VerticalAlignment="Top"  Grid.Column="1" Checked="UpdateChild_Checked"/>
        <RadioButton x:Name="DeleteChild" Content="Delete Child" HorizontalAlignment="Left" Margin="82.6,200,0,0" VerticalAlignment="Top"  Grid.Column="1"/>



        <Border BorderBrush="Black"  Visibility="Collapsed" BorderThickness="1" Margin="180,160,10.4,140">
            <ScrollViewer Background="White" VerticalScrollBarVisibility="Auto" Margin="0.2,-0.8,-0.8,-2" RenderTransformOrigin="0.5,0.5">
                <StackPanel Name="resultStack"></StackPanel>
            </ScrollViewer>
        </Border>
    </Grid>
</Page>